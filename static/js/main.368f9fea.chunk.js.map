{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","console","log","className","href","Counter","prevProps","prevState","counter","value","this","props","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","id","classes","count","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.368f9fea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n//Stateless functional componenet\nconst NavBar = ({ totalCounters }) => {\n  console.log(\"Navbar - Rendered\");\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Navbar{\" \"}\n        <span className=\"badge badge-pill badge-secondary\">\n          {totalCounters}\n        </span>\n      </a>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevProps\", prevProps);\n    console.log(\"prevState\", prevState);\n    if (prevProps.counter.value !== this.props.counter.value) {\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"Counter - Unmount\");\n  }\n\n  render() {\n    console.log(\"Counter - Rendered\");\n\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.props.onIncrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value: count } = this.props.counter;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  render() {\n    console.log('Counters - Rendered')\n    const { onReset, counters, onDelete, onIncrement } = this.props;\n    return (\n      <div>\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\n          Reset\n        </button>\n        {counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={onDelete}\n            onIncrement={onIncrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    console.log(\"App - Mounted\");\n  }\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n        <Navbar\n          totalCounters={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}